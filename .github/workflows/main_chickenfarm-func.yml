name: Deploy ChickenFarm Functions

on:
  push:
    branches:
      - main
    # Optional: Only trigger when function files change
    # paths:
    #   - 'azure-functions/**'

env:
  NODE_VERSION: '20'
  FUNCTIONAPP_NAME: chickenfarm-func
  FUNCTION_ENDPOINT: https://chickenfarm-func.azurewebsites.net/api/negotiate

jobs:
  deploy-functionapp:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies (if package.json exists)
        run: |
          if [ -f "azure-functions/package.json" ]; then
            cd azure-functions
            npm install
            cd ..
          fi

      - name: Zip Azure Function project
        run: |
          cd azure-functions
          zip -r ../functionapp.zip *
          cd ..

      - name: List ZIP contents (debug)
        run: unzip -l functionapp.zip

      - name: Deploy to Azure Function App
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.FUNCTIONAPP_NAME }}
          package: functionapp.zip
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

      - name: Ping Function App endpoint
        run: |
          echo "Waiting 10 seconds to allow deployment to finish..."
          sleep 10
          echo "Pinging ${{ env.FUNCTION_ENDPOINT }}..."
          http_response=$(curl -s -o /dev/null -w "%{http_code}" "${{ env.FUNCTION_ENDPOINT }}")
          echo "HTTP status code: $http_response"
          if [ "$http_response" -ne 200 ]; then
            echo "❌ Function did not return 200 OK"
            exit 1
          else
            echo "✅ Function is live and responding"
          fi
